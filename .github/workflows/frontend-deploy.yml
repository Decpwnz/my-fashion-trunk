name: Deploy Frontend

on:
  push:
    branches: [master]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'

env:
  AWS_REGION: eu-north-1
  ECR_REGISTRY: 375157271503.dkr.ecr.eu-north-1.amazonaws.com
  ECR_REPOSITORY: my-fashion-trunk-frontend
  ECS_SERVICE: frontend-service
  ECS_CLUSTER: my-fashion-trunk-cluster
  CONTAINER_NAME: frontend
  TASK_DEFINITION_FAMILY: frontend-task
  ECS_TASK_EXECUTION_ROLE: arn:aws:iam::375157271503:role/ecsTaskExecutionRole
  ECS_TASK_ROLE: arn:aws:iam::375157271503:role/ecsTaskRole

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        working-directory: ./frontend
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Create and update ECS resources
        run: |
          # Register task definition with execution role and task role
          aws ecs register-task-definition \
            --family ${{ env.TASK_DEFINITION_FAMILY }} \
            --container-definitions "[{\"name\":\"${{ env.CONTAINER_NAME }}\",\"image\":\"${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}\",\"essential\":true,\"portMappings\":[{\"containerPort\":80,\"hostPort\":80,\"protocol\":\"tcp\"}]}]" \
            --requires-compatibilities FARGATE \
            --network-mode awsvpc \
            --cpu 256 \
            --memory 512 \
            --execution-role-arn ${{ env.ECS_TASK_EXECUTION_ROLE }} \
            --task-role-arn ${{ env.ECS_TASK_ROLE }}
